pkgname=ceph
pkgver=19.1.1
pkgrel=1
arch=('x86_64')
depends=("zstd" 'bash' 'bc' 'bzip2' 'c-ares' 'cmake' 'coreutils'
    'cpio' 'curl' 'expat' 'fontconfig' 'fuse2' 'fuse3' 'gcc' 'git' 'glibc' 'gnutls'
    'gperf' 'inetutils' 'keyutils' 'libcap' 'snappy' 'benchmark' 'gawk'
    'libedit' 'libgudev' 'libnl' 'libtool' 'util-linux' 'libaio'
    'libuv' 'libxml2' 'libpciaccess' 'lz4' 'ncurses' 'python3-pip'
    'nss' 'numactl' 'openssl' 'parted' 'pcre' 'pcre2' 'pkgconf' 'libcap-ng'
    'procps-ng' 'sed' 'systemd' 'valgrind' 'yaml' 'yasm' 'zlib' 'openldap'
    'cryptsetup' 'openjdk-17' 'lua')
makedepends=(python3-pip boost)
options=('emptydirs' '!lto')
source=(https://download.ceph.com/tarballs/${pkgname}-${pkgver}.tar.gz)

prepare() {
    cd "${pkgname}-${pkgver}"

    # Install python3 needed modules ( may need more attention on cleaner dev env's )
    pip3 install setuptools
    pip3 install doxypypy doxyqml requests
    pip3 install Cython pyyaml

    # Fix some things
    find . -name '*.cmake' -or -name 'CMakeLists.txt' -print0 | xargs --null \
        sed -r \
        -e 's|Boost::|boost_|g' \
        -e 's|Boost_|boost_|g' \
        -e 's|[Bb]oost_boost|boost_system|g' -i || exit 1


    # Remove some things before configuring the source
    rm src/test/cli/ceph-authtool/cap*.t
    sed -i '/add_ceph_test(smoke.sh/d' src/test/CMakeLists.txt
    sed -i '/add_ceph_test(safe-to-destroy.sh/d' src/test/osd/CMakeLists.txt

    # Configure pkg in prepare so build() only compiles the pkg
    CPPFLAGS+=' -DBOOST_ASIO_USE_TS_EXECUTOR_AS_DEFAULT'
    export CFLAGS+=" ${CPPFLAGS} -w"
    export CXXFLAGS+=" ${CPPFLAGS} -w"
    export PYTHON_VERSION="$(python3 --version | awk '{print $2}')"
    export PYTHON_INCLUDE_DIR="$(python3 -c "from sysconfig import get_path; print(get_path('include'))")"
    export CMAKE_BUILD_TYPE='RelWithDebInfo'
    export CMAKE_WARN_UNUSED_CLI=no

    cmake \
    -B build \
    -D CMAKE_INSTALL_PREFIX=/usr \
    -D CMAKE_INSTALL_SYSCONFDIR=/etc \
    -D CEPH_SYSTEMD_ENV_DIR=/etc/default \
    -D CMAKE_INSTALL_SYSTEMD_SERVICEDIR=/usr/lib/systemd/system \
    -D WITH_PYTHON2=OFF \
    -D WITH_PYTHON3="${PYTHON_VERSION}" \
    -D WITH_BABELTRACE=OFF \
    -D WITH_LTTNG=OFF \
    -D WITH_OPENLDAP=ON \
    -D WITH_RDMA=OFF \
    -D WITH_OCF=OFF \
    -D WITH_DPDK=OFF \
    -D WITH_SPDK=OFF \
    -D WITH_CEPHFS=ON \
    -D WITH_CEPHFS_JAVA=ON \
    -D WITH_CEPHFS_SHELL=ON \
    -D WITH_FUSE=ON \
    -D WITH_LEVELDB=OFF \
    -D WITH_LZ4=ON \
    -D WITH_XFS=ON \
    -D WITH_MGR=ON \
    -D WITH_MGR_DASHBOARD_FRONTEND=ON \
    -D DASHBOARD_FRONTEND_LANGS="ALL" \
    -D WITH_RADOSGW=OFF \
    -D WITH_RADOSGW_FCGI_FRONTEND=OFF \
    -D WITH_RADOSGW_BEAST_FRONTEND=OFF \
    -D WITH_RADOSGW_BEAST_OPENSSL=OFF \
    -D WITH_RADOSGW_AMQP_ENDPOINT=OFF \
    -D WITH_SYSTEMD=ON \
    -D WITH_SYSTEM_BOOST=ON \
    -D WITH_BOOST_CONTEXT=ON \
    -D WITH_SYSTEM_NPM=OFF \
    -D ENABLE_SHARED=ON \
    -D WITH_TESTS=OFF \
    -D WITH_MANPAGE=OFF \
    -D JAVA_AWT_LIBRARY=/opt/jdk-17/lib/ \
    -D JAVA_JVM_LIBRARY=/opt/jdk-17/lib/ \
    -D JAVA_INCLUDE_PATH=/opt/jdk-17/include/ \
    -Wno-dev
}

build() {
    cd "${pkgname}-${pkgver}"

    cmake --build build -j4
}

package() {
    cd "${pkgname}-${pkgver}"

    make -C build DESTDIR=$pkgdir install

    # remove _test_ binaries from the package, not needed
    find "$pkgdir/usr/bin" -maxdepth 1 -type f -iname 'ceph_test_*' -delete

    # Debian init scripts
    rm -rf "$pkgdir/etc/init.d"

    # fix bash completions path
    install -d -m 755 "$pkgdir/usr/share/bash-completion"
    mv "$pkgdir"/{etc/bash_completion.d,usr/share/bash-completion/completions}

    # fix EnvironmentFile location in systemd service files
    sed -i 's|/etc/sysconfig/|/etc/conf.d/|g' "$pkgdir"/usr/lib/systemd/system/*.service

    # prepare some paths and set correct permissions
    install -D -d -m750 -o   0 -g 340 "$pkgdir/etc/ceph"
    install -D -d -m750 -o 340 -g 340 "$pkgdir/var/log/ceph"
    install -D -d -m750 -o 340 -g 340 "$pkgdir/var/lib/ceph"
    install -D -d -m750 -o 340 -g 340 "$pkgdir/var/lib/ceph/bootstrap-mds"
    install -D -d -m750 -o 340 -g 340 "$pkgdir/var/lib/ceph/bootstrap-osd"
    install -D -d -m750 -o 340 -g 340 "$pkgdir/var/lib/ceph/bootstrap-rgw"
    install -D -d -m750 -o 340 -g 340 "$pkgdir/var/lib/ceph/crash/posted"
    install -D -d -m750 -o 340 -g 340 "$pkgdir/var/lib/ceph/mon"
    install -D -d -m750 -o 340 -g 340 "$pkgdir/var/lib/ceph/mgr"
    install -D -d -m750 -o 340 -g 340 "$pkgdir/var/lib/ceph/osd"

}
